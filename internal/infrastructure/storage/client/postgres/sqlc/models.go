// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package sqlc

import (
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type Client struct {
	ID        string             `db:"id"`
	Name      string             `db:"name"`
	Secret    string             `db:"secret"`
	Status    int32              `db:"status"`
	CreatedAt time.Time          `db:"created_at"`
	UpdatedAt time.Time          `db:"updated_at"`
	DeletedAt pgtype.Timestamptz `db:"deleted_at"`
}

type ClientStatus struct {
	ID    int32  `db:"id"`
	Title string `db:"title"`
}

type Token struct {
	Token       string    `db:"token"`
	UserID      string    `db:"user_id"`
	ClientID    string    `db:"client_id"`
	Endpoint    string    `db:"endpoint"`
	Recipient   string    `db:"recipient"`
	TokenTypeID int32     `db:"token_type_id"`
	CreatedAt   time.Time `db:"created_at"`
	ExpiresAt   time.Time `db:"expires_at"`
}

type TokenType struct {
	ID    int32  `db:"id"`
	Title string `db:"title"`
}

type User struct {
	ID           string             `db:"id"`
	Email        string             `db:"email"`
	PasswordHash string             `db:"password_hash"`
	ClientID     string             `db:"client_id"`
	Verified     pgtype.Bool        `db:"verified"`
	CreatedAt    time.Time          `db:"created_at"`
	UpdatedAt    time.Time          `db:"updated_at"`
	DeletedAt    pgtype.Timestamptz `db:"deleted_at"`
}

type UserDevice struct {
	ID            string             `db:"id"`
	UserID        string             `db:"user_id"`
	ClientID      string             `db:"client_id"`
	UserAgent     string             `db:"user_agent"`
	Ip            string             `db:"ip"`
	Detached      bool               `db:"detached"`
	LastVisitedAt time.Time          `db:"last_visited_at"`
	DetachedAt    pgtype.Timestamptz `db:"detached_at"`
}
